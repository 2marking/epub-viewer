language: android
jdk:
  - oraclejdk8
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/    
    - $HOME/android-sdk-dl
    - $HOME/android-sdk

install:
  - export ANDROID_HOME=$HOME/android-sdk
  - export ANDROID_SDK_ROOT=$HOME/android-sdk
  - if test ! -e $HOME/android-sdk-dl/sdk-tools.zip ; then curl https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > $HOME/android-sdk-dl/sdk-tools.zip ; fi
  - unzip -qq -n $HOME/android-sdk-dl/sdk-tools.zip -d $HOME/android-sdk
  - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'tools' > /dev/null
  - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'platform-tools' > /dev/null
  - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'build-tools;28.0.3' > /dev/null
  - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'platforms;android-28' > /dev/null
  - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'system-images;android-22;default;armeabi-v7a' > /dev/null
before_install:
# - echo no | $HOME/android-sdk/tools/bin/avdmanager create avd --name TESTDEVICE --package 'system-images;android-22;default;armeabi-v7a'
#  - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a
- chmod +x gradlew
- chmod +rx app
before_script:
  - echo no | $HOME/android-sdk/tools/bin/avdmanager create avd --force -n test -k "system-images;android-22;default;armeabi-v7a"
  - $HOME/android-sdk/tools/emulator -avd test -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &
skip_cleanup: true
script:
- ./gradlew connectDebug
